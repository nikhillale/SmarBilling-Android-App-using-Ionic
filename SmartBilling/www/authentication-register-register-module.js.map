{"version":3,"sources":["webpack:///./src/app/authentication/register/register.module.ts","webpack:///./src/app/authentication/register/register.page.html","webpack:///./src/app/authentication/register/register.page.scss","webpack:///./src/app/authentication/register/register.page.ts"],"names":[],"mappings":"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","file":"authentication-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=primary>\\n      <ion-title >Smart Billing\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content>  \\n    <ion-card style=\\\"margin-top: 1cm\\\"> \\n      <form [formGroup]=\\\"regForm\\\">\\n          <ion-item>\\n              <ion-card-title color=\\\"primary\\\" >{{login}}</ion-card-title>\\n          </ion-item>\\n          <div *ngIf=dis>\\n              <ion-card>\\n                  <ion-item>\\n                      <ion-input type=\\\"text\\\" placeholder=\\\"Enter One Time Password\\\" formControlName=\\\"OTP\\\"></ion-input>\\n                  </ion-item>\\n                </ion-card>\\n                <ion-button (click)=\\\"onVerify()\\\" size=\\\"small\\\"  color=\\\"tertiary\\\"  style=\\\"margin:auto; margin-bottom: 20px;margin-left:6cm\\\"  padding>Verify</ion-button>\\n          </div> \\n          <div *ngIf=dis2>\\n              <ion-card>\\n                  <ion-item>\\n                      <ion-input type=\\\"text\\\" placeholder=\\\"Enter New Password\\\" formControlName=\\\"password\\\"></ion-input>\\n                  </ion-item>\\n                </ion-card>\\n                <ion-card>\\n                  <ion-item>\\n                    <ion-input type=\\\"password\\\"  placeholder=\\\"Conformed Password\\\" formControlName=\\\"conformPass\\\"></ion-input>\\n                  </ion-item>\\n                </ion-card>\\n                <ion-button (click)=\\\"onSubmit()\\\"  size=\\\"small\\\"  color=\\\"tertiary\\\"  style=\\\"margin:auto; margin-bottom: 20px;margin-left:6cm\\\"  padding>Submit</ion-button>\\n          </div>  \\n    </form>\\n</ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpService } from 'src/app/shared/http.service';\nimport { ToastController } from '@ionic/angular';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  regForm: FormGroup;\n  message: false;\n  dis: boolean=true;\n  dis2: boolean=false;\n  login='Verify OTP'\n  constructor(\n    public active: ActivatedRoute,\n    private fb: FormBuilder, \n    private http: HttpService,\n    private router: Router,\n    private toastController: ToastController) { }\n  ngOnInit() {\n    this.regForm = this.fb.group({\n      conformPass: [''],\n      password : [''],\n      OTP:['']\n    });\n  }\n  onVerify(){\n    let otp = this.active.snapshot.paramMap.get('otp');\n    console.log(otp);\n    let checkOTP = this.regForm.get('OTP').value;\n    if (checkOTP === otp) {\n      this.login='Reset Password'\n      this.dis=false;\n      this.dis2 = true;\n      this.verificationToast();\n    } else {\n      this.wrongOtpToast()\n    }\n  }\n  async verificationToast() {\n    const alertcntrl = await this.toastController.create({\n      message: 'Verified Successfully.Reset Password',\n      duration: 2000,\n      position: 'bottom',\n    });\n\n    await alertcntrl.present();\n  }\n  async wrongOtpToast() {\n    const alertcntrl = await this.toastController.create({\n      message: 'Please enter Correct OTP.',\n      duration: 2000,\n      position: 'bottom',\n    });\n\n    await alertcntrl.present();\n  }\n\n  onSubmit(){\n    const password = this.regForm.get('password').value;\n    const confPass= this.regForm.get('conformPass').value;\n    if(password !== confPass){\n      this.wrongPassToast();\n    } else {\n      const email = localStorage.getItem('email');\n      const inputdata = new FormData();\n      inputdata.append('password', confPass);\n      inputdata.append('email',email);\n\n      this.http.resetPass(inputdata).subscribe(res=>{\n        localStorage.removeItem('email');\n        this.router.navigate(['../login']);\n      });\n    } \n  }\n\n  async paswordToast() {\n    const alertcntrl = await this.toastController.create({\n      message: 'Password Reset Successfully.Please login',\n      duration: 2000,\n      position: 'bottom',\n    });\n\n    await alertcntrl.present();\n  }\n\n  async wrongPassToast() {\n    const alertcntrl = await this.toastController.create({\n      message: 'Please Enter Correct password',\n      duration: 2000,\n      position: 'bottom',\n    });\n    await alertcntrl.present();\n  }\n\n}\n"],"sourceRoot":""}